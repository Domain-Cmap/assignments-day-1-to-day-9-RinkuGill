Problem 1: Sum of Natural Numbers up to N 
Calculate the sum of all natural numbers from 1 to n, where n is a positive 
integer. Use the formula: 
Sum=n√ó(n+1)/2. 
Take n as input and output the sum of natural numbers from 1 to n . 
Solution : 
#include<iostream> 
using namespace std; 
int main() 
{ 
cout << "Sum upto:"; 
int n; 
cin >> n; 
cout << "Sum of " << n << " Natural Numbers: "; 
int sum = n * (n + 1) / 2; 
cout << sum; 
return 0; 
}


Problem 2:  Check if a Number is Prime. 
Check if a given number n is a prime number. A prime number is a natural 
number greater than 1 that has no positive divisors other than 1 and itself. 
Solution:  
#include <iostream> 
using namespace std; 
bool isPrime(int n) { 
if (n <= 1) { 
return false; 
} 
for (int i = 2; i * i <= n; i++) { 
if (n % i == 0) { 
return false; 
} 
} 
return true; 
} 
int main() { 
int n; 
cout << "Enter a number: "; 
cin >> n; 
if (isPrime(n)) { 
cout << n << " is a prime number." << endl; 
} else { 
cout << n << " is not a prime number." << endl; 
} 
return 0; 
} 




Problem 3: Print Odd Numbers up to N. 
Print all odd numbers between 1 and n, inclusive. Odd numbers are integers that 
are not divisible by 2. These numbers should be printed in ascending order, 
separated by spaces. 
Solution: 
#include <iostream> 
using namespace std; 
void printOddNumbers(int n) { 
for (int i = 1; i <= n; i += 2) { 
cout << i << " "; 
} 
cout << endl; 
} 
int main() { 
int n; 
cout << "Print Odd numbers upto: "; 
cin >> n; 
if (n < 1) { 
cout << "Invalid input! n should be greater than or equal to 1." << endl; 
return 1; 
} 
printOddNumbers(n); 
return 0; 
} 
